# Simple Single-Container Dockerfile
# Serves both backend and frontend in one container

FROM node:18-alpine AS frontend-build

WORKDIR /frontend

# Copy and build frontend
COPY frontend/package*.json ./
RUN npm ci --only=production
COPY frontend/ ./
RUN npm run build

FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies with retries and better error handling
COPY backend/requirements_py38.txt ./requirements.txt

# Upgrade pip first and install dependencies with retry logic
RUN pip install --upgrade pip && \
    pip install --no-cache-dir --retries 3 --timeout 300 -r requirements.txt || \
    (echo "First attempt failed, trying with simpler packages..." && \
     pip install --no-cache-dir fastapi uvicorn pydantic requests python-dotenv pdfplumber Pillow && \
     pip install --no-cache-dir sentence-transformers || echo "ML packages failed, continuing..." && \
     pip install --no-cache-dir chromadb || echo "ChromaDB failed, continuing...")

# Copy backend code
COPY backend/app/ ./app/

# Copy the combined main file for serving static files
COPY backend/app/main_combined.py ./app/main_combined.py

# Copy frontend build
COPY --from=frontend-build /frontend/build ./static

# Create ChromaDB directory
RUN mkdir -p ./chroma_db

# Set environment variables
ENV PORT=8000
ENV PYTHONPATH=/app

EXPOSE 8000

CMD ["uvicorn", "app.main_combined:app", "--host", "0.0.0.0", "--port", "8000"]
