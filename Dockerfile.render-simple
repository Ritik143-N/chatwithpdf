# Render-optimized single container
# No Nginx, no Supervisor - just FastAPI serving everything

FROM node:18-alpine AS frontend-build

WORKDIR /frontend

# Copy and build frontend
COPY frontend/package*.json ./
RUN npm ci --only=production --silent
COPY frontend/ ./
RUN npm run build

FROM python:3.11-slim

WORKDIR /app

# Install minimal system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies in stages for reliability
RUN pip install --upgrade pip

# Install core dependencies first
COPY backend/requirements_minimal.txt ./
RUN pip install --no-cache-dir --timeout 300 --retries 3 -r requirements_minimal.txt

# Try to install ML packages (optional - app works without them)
RUN pip install --no-cache-dir --timeout 300 sentence-transformers==2.2.2 || echo "ML packages skipped"
RUN pip install --no-cache-dir --timeout 300 chromadb==0.3.29 || echo "ChromaDB skipped"

# Copy application code
COPY backend/app/ ./app/

# Copy built frontend
COPY --from=frontend-build /frontend/build ./static

# Create data directory
RUN mkdir -p ./chroma_db

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Use Render's dynamic PORT
CMD ["sh", "-c", "uvicorn app.main_combined:app --host 0.0.0.0 --port ${PORT:-8000}"]
